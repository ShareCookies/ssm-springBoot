Cluster模式
	介绍：
		Redis Cluster 是社区版推出的 Redis 分布式集群解决方案，主要解决 Redis 分布式方面的需求。
			比如，当遇到单机内存，并发和流量等瓶颈的时候，Redis Cluster 能起到很好的负载均衡的目的。
			附：
				单机内存：
					cluster模式解决单机Redis容量有限的问题，对存储的数据进行分片，将Redis的数据根据一定的规则分配到多台机器（多个Redis实例中）。
		cluster集群特点：
			1. Redis Cluster集群采用了P2P的模式，完全去中心化。
				即客户端可以连接任何一个主节点进行读写
				！
					是怎么实现的了，我连a，a没数据它是如何从别的地方获取到数据了
						Redis Cluster 采用虚拟槽分区，所有的键根据哈希函数映射到 0～16383 个整数槽内，每个节点负责维护一部分槽以及槽所印映射的键值数据。
							例：
								4个节点
								16384/4 每个节点将近维护4096，健值%16384 余数即为其存储位置，然后去对应节点找！
						附：
							！redis的分配规则
							https://blog.csdn.net/weixin_43145146/article/details/98851126
							https://blog.csdn.net/qq_40718168/article/details/89454996
			2. 所有的节点都是一主一从（也可以是一主多从）
				1. 其中主节点提供读写操作，从节点作为备用节点
					从节点不提供请求，只作为故障转移使用
				2. 主从都挂了，那么整个集群进入fail状态。
				附：
					https://www.cnblogs.com/dadonggg/p/8628735.html
					1、集群是如何判断是否有某个节点挂掉
					　　节点之间通过互相的ping-pong判断是否节点可以连接上。如果有一半以上的节点去ping一个节点的时候没有回应，集群就认为这个节点宕机了，然后去连接它的备用节点。
						！
							备用节点是要经过什么步骤升级为主节点的了，是连上被某台主节点调了配置吗
					2、集群进入fail状态的必要条件
						A、某个主节点和所有从节点全部挂掉，我们集群就进入faill状态。
						B、如果集群超过半数以上master挂掉，无论是否有slave，集群进入fail状态.
						C、如果集群任意master挂掉,且当前master没有slave.集群进入fail状态
						！
							进入失败状态cluster则不提供服务了把
				附2：
					Redis Cluster 集群节点最小配置 6 个节点以上(3 主 3 从)
			3. 支持在线增加、删除节点
				！redis集群数据是均摊的吗，新加入的节点会被分配数据吗
					应该是的，新加入的节点会被分配数据
			4. java jedisCluster类不支持同时处理多个key（如pipeline，MSET/MGET），即不支持批处理操作
				为什么jedisCluster不主动提供批处理：
					是因为批量操作可能会把大量批量命令分到同一台计算器去计算、导致出异常吗？所以才不主动提供但我们可以自己实现。
					附：
						会是计算过程中数据分配错误原因吗，不太会，想不出来什么情况会出现
							因为redis需要把key均匀分布在各个节点上， 并发量很高的情况下同时创建key-value会降低性能并导致不可预测的行为。？
							redis集群会根据其分配规则来把数据分配到指定节点，如果用批量操作即高并发可能会导致数据分配错节点等情况，那么查找时可能就找不到数据了等未知情况，所以redis的Jedis(Redis 的 Java 客户端(api))不主动提供集群的批处理支持方法？

				改造实现：
					https://www.yzlfxy.com/jiaocheng/database/322712.html
					数据分配是根据分配规则到各个节点上，批处理改造为，计算在那个节点上，然后去各个节点上get查找。
					！
						这么做会有什么问题了
		cluster优缺点：
			优点：
				分摊压力(高可用、高并发)
				容易扩容

			缺陷：
				多键的Redis事务是不被支持的。lua脚本不被支持。
				多键操作是不被支持的
					可以通过改写jedisclus来支持
				？没有以下的吧
					1、资源隔离性较差，容易出现相互影响的情况。
					2、数据通过异步复制,不保证数据的强一致性				


	集群搭建：
		https://blog.csdn.net/miss1181248983/article/details/90056960
		1. 修改配置文件：
			主要是将redis配置文件中的cluster-enable配置打开即可
		2. 启动所有的redis服务：
			附：如果redis版本比较低，则需要安装ruby。任选一台机器安装ruby即可
		3.创建集群
			# redis-cli -a 123456 --cluster create 192.168.30.128:7001 192.168.30.128:7002 192.168.30.129:7003 192.168.30.129:7004 192.168.30.130:7005 192.168.30.130:7006 --cluster-replicas 1
		附：
		集群的操作
			登录集群：
				# redis-cli -c -h 192.168.30.128 -p 7001 -a 123456                  # -c，使用集群方式登录
			查看集群信息
				CLUSTER INFO 
			列出节点信息
				CLUSTER NODES
				注：这里与nodes.conf文件内容相同
	spring连接redis集群：
		https://docs.spring.io/spring-data/data-redis/docs/current/reference/html/#cluster
		https://blog.csdn.net/u010199866/article/details/80705797?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-6&spm=1001.2101.3001.4242