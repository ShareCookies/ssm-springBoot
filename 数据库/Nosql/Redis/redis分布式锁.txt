https://blog.csdn.net/yb223731/article/details/90349502
什么是分布式锁:
	要介绍分布式锁，首先要提到与分布式锁相对应的是线程锁、进程锁。
	线程锁：
		主要用来给方法、代码块加锁。当某个方法或代码使用锁，在同一时刻仅有一个线程执行该方法或该代码段。线程锁只在同一JVM中有效果，因为线程锁的实现在根本上是依靠线程之间共享内存实现的，比如synchronized是共享对象头，显示锁Lock是共享某个变量（state）。
	进程锁：
		为了控制同一操作系统中多个进程访问某个共享资源，因为进程具有独立性，各个进程无法访问其他进程的资源，因此无法通过synchronized等线程锁实现进程锁。
	分布式锁：
		当多个进程不在同一个系统中，用分布式锁控制多个进程对资源的访问。
	附：
		分布式锁的使用场景：
			线程间并发问题和进程间并发问题都是可以通过分布式锁解决的，但是强烈不建议这样做！因为采用分布式锁解决这些小问题是非常消耗资源的！分布式锁应该用来解决分布式情况下的多进程并发问题才是最合适的。
			有这样一个情境，线程A和线程B都共享某个变量X。
			如果是单机情况下（单JVM），线程之间共享内存，只要使用线程锁就可以解决并发问题。
			如果是分布式情况下（多JVM），线程A和线程B很可能不是在同一JVM中，这样线程锁就无法起到作用了，这时候就要用到分布式锁来解决。
Redis实现分布式锁：
	分布式锁实现的关键是在分布式的应用服务器外，搭建一个存储服务器，存储锁信息，这时候我们很容易就想到了Redis。
	在实现的时候要注意的几个关键点：
		1、锁信息必须是会过期超时的，不能让一个线程长期占有一个锁而导致死锁；
		2、同一时刻只能有一个线程获取到锁。

