临时表：
	介绍：将查询结果作为另一个查询语句的来源
	例：
		select * from(select * from test)  a

表连接:
	位置：
		from 后 ，where 前。
		注：表连接要与on配合，on设置连接条件
	介绍：
		表连接分内连接和外连接。
			内连接：是保证两个表中所有的行都要满足连接条件。
			外连接：某些不满条件的列也会显示出来。即只限制其中一个表的行，而不限制另一个表的行。
				分左连接、右连接、全连接三种。
	inner join：
		介绍：简写join。内连接，返回左右表均有的值。
		样例：
			写法1：select * from client as c inner join financial_account as f on c.idcard = f.idcard 
			写法2：select * from client  c join financial_account  f on c.idcard = f.idcard 
		注：
			内连接可以不加on，此时效果与笛卡尔积连接一样。！
	left outer join：
		介绍：简写left join。左连接，左表数据全部显示，且左表有的右表没有的则显示为null。
		样例：
	right outer join：
		介绍：
			简写right join。右连接，右表数据全部显示，且右表有的左表没有的则显示为null。
			即显示左表所有内容，右边没有与之对应的内容则显示为null。
		样例：
	full out join：
		介绍：
			MySQL中不支持 FULL OUTER JOIN。
			简写full join 。全连接，返回两表所有数据未匹配项用null代替。
			即：左连接结果与右连接结果的合并。
		mysql模拟实现全连接：
			SELECT * FROM t1
			LEFT JOIN t2 ON t1.id = t2.id
			UNION
			SELECT * FROM t1
			RIGHT JOIN t2 ON t1.id = t2.id
	其余连接：
		逗号连接（笛卡尔积连接）：
				介绍：
					cross join 简写 ,
					笛卡尔积连接就是第一个表的行数乘以第二个表的行数。
				例：
					select * from client  c , financial_account as f 
					这样是以广义笛卡尔积查询出数据，若用where规定连接条件就等同内连接
				注：
					1.
						用cross join时可使用on查询
						逗号时不行
				自连接:
					样例:
						select a.id,b.id,b.pid,b.name 
						from test as a,test as b 
						where a.id=b.pid
				三表连接：
					写法1：select * from student inner join teacher on student.id=teacher.sid inner join project on student.id=project.sid;  
					写法2：select * from student,teacher,project where student.id=teacher.sid and student.id=project.sid;
				，与inner join关系：
					https://blog.csdn.net/huanghanqian/article/details/52847835

		非等连接：？
			介绍：使用等值以外的条件来匹配左、右两个表中的行 select A.c1,B.c2 from A join B on A.c3 != B.c3;