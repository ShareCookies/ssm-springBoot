关系型数据库:
	遵循ACID规则
事务 （transaction）：
	事务是逻辑上的一组操作，这组操作要么都执行，要么都不执行。
	spring中使用事务：	
		/spring/spring事务管理/
	事务四个特性：
		1、A (Atomicity) 原子性
			原子性很容易理解，也就是说事务里的所有操作要么全部做完，要么都不做，事务成功的条件是事务里的所有操作都成功，只要有一个操作失败，整个事务就失败，需要回滚。
			例：比如银行转账，从A账户转100元至B账户，分为两个步骤：1）从A账户取100元；2）存入100元至B账户。这两步要么一起完成，要么一起不完成，如果只完成第一步，第二步失败，钱会莫名其妙少了100元。
			hcg：
				所有的步骤都要完成
		2、C (Consistency) 一致性

			一致性也比较容易理解，也就是说数据库要一直处于一致的状态，事务的运行不会改变数据库原本的一致性约束。

			例：现有完整性约束a+b=10，如果一个事务改变了a，那么必须得改变b，使得事务结束后依然满足a+b=10，否则事务失败。
			hcg：
				操作完成后，数据的和要与操作前一致
		3、I (Isolation) 隔离性
			所谓的独立性是指并发的事务之间不会互相影响，如果一个事务要访问的数据正在被另外一个事务修改，只要另外一个事务未提交，它所访问的数据就不受未提交事务的影响。

			例：现在有个交易是从A账户转100元至B账户，在这个交易还未完成的情况下，如果此时B查询自己的账户，是看不到新增加的100元的。
			hcg:
				
			事务的隔离级别：
				https://blog.csdn.net/dengjili/article/details/82468576
			
		4、D (Durability) 持久性
			持久性是指一旦事务提交后，它所做的修改将会永久的保存在数据库上，即使出现宕机也不会丢失。
			hcg：
				事务提交后，其涉及的数据修改永不丢失