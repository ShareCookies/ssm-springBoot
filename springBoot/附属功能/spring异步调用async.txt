https://www.cnblogs.com/jpfss/p/10273129.html
1. @Async介绍
	在Spring中，基于@Async标注的方法，称之为异步方法；这些方法将在执行的时候，将会在独立的线程中被执行，调用者无需等待它的完成，即可继续其他的操作。
2. 使用
	@Async作用于方法上
		@Async
		public void testAsync() { 
			 
		}
	@EnableAsync在主类
		@EnableAsync
		@SpringBootApplication
		public class TestApplication
		{
			public static void main( String[] args )
			{
				SpringApplication.run(TestApplication.class, args);
			   }
		}
3. 失效原因
	https://blog.csdn.net/qq_21454973/article/details/125857828
	1.@SpringBootApplication启动类当中没有添加@EnableAsync注解。
	2.异步方法使用注解@Async的返回值只能为void或者Future。
	3.没有走Spring的代理类。因为@Transactional和@Async注解的实现都是基于Spring的AOP，而AOP的实现是基于动态代理模式实现的。那么注解失效的原因就很明显了，有可能因为调用方法的是对象本身而不是代理对象，因为没有经过Spring容器管理。
4.
默认线程池
	默认使用Spring创建ThreadPoolTaskExecutor。

	默认核心线程数：8，

	最大线程数：Integet.MAX_VALUE，

	队列使用LinkedBlockingQueue，

	容量是：Integet.MAX_VALUE，

	空闲线程保留时间：60s，

	线程池拒绝策略：AbortPolicy。

	问题：并发情况下，会无线创建线程

	解决：自定义配置参数

	spring:
	  task:
		execution:
		  pool:
			max-size: 6
			core-size: 3
			keep-alive: 3s
			queue-capacity: 1000
		  thread-name-prefix: name
5.
自定义线程池:
	https://blog.csdn.net/waitu88/article/details/119783542
	...