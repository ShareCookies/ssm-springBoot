程序发送/接收邮件的流程:
	发送-》中转-》查询来接收
	发送邮件：
		基于 JavaMail 的程序将和SMTP（可以别的协议）服务器通信，通过协议传输消息给邮件服务器。
		SMTP 服务器会中转消息给接收方 SMTP 服务器。
	接收邮件：
		然后程序通过 POP 或 IMAP 协议和接收方服务器进行通信，然后获取邮件信息。
	
	注：
		如何伪造发送者：
			自己打邮件服务器。
			驗不驗證是服務器説了算，你要用JAVAMAIL發郵件，必然是通過網絡中某台服務器代發，例如163，不驗證一定是不通過。
			要不就自己搭建郵件服務器，自己發。


JavaMail解析：
	https://blog.csdn.net/a2241076850/article/details/52856863
	javamail例子：
		https://blog.csdn.net/qq_36468243/article/details/82464022#commentBox
		https://blog.csdn.net/rhy0619/article/details/81184482
	JavaMail依赖包：
			https://mvnrepository.com/artifact/javax.activation/activation/1.1.1
			https://mvnrepository.com/artifact/com.sun.mail/javax.mail/1.6.2
SpringBoot整合Mail:
	* https://blog.csdn.net/qq_37745470/article/details/89094227
	邮件内容构造：
		简单邮件可以通过SimpleMailMessage来构造。
		而复杂的邮件（例如添加附件）可以借助MimeMessageHelper来构建MimeMessage。
	邮件发送：
		JavaMailSender和JavaMailSenderImpl是Spring官方提供的集成邮件服务的接口和实现类，以简单高效的设计著称，目前是Java后端发送邮件和集成邮件服务的主流工具。
		作用：
			即使用javaMailSender.send(.)来发送邮件。
		JavaMailSenderImpl(复杂邮件内容)
			https://www.php.cn/manual/view/22279.html
			

			附：
				MimeMessageHelper发送MIMe类型（html）邮件无法正常解析：
					https://blog.csdn.net/ZY_201803/article/details/105061995
	
附：
spring:
  #邮箱配置
  mail:
    host: smtp.163.com
	port: 465
	default-encoding: UTF-8
	#公用的邮件服务器，发送者账号要和验证账号一样的！
    username: ***@163.com
    password: 授权码
    properties:
      mail:
		smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory
注：
	在本地上可以实现邮件发送，在服务器上无法实现：
	阿里云|腾讯云等禁用了tcp 25端口(即使手动开放了也不行)，
		可通过telnet来测试是否通
	所以改为465端口采用SSL协议传输邮件。
	附：
		服务器名称	服务器地址	SSL协议带端口号	非SSL协议端口号
		SMTP	smtp.163.com	465/994		25
