redis介绍：
	/数据库/Nosql/Redis/Redis.txt

spring缓存官网：
	Spring官方demo：
		https://spring.io/guides/gs/caching/
		这里提供了使用默认缓存的demo，内容更加简单，适合对spring-boot不熟悉的读者。
	Spring官方文档：
		https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html#cache
		这里有对如何使用cache的详细介绍，比如如何主动更新缓存、移除缓存，都是本demo中没有的内容。
SpringBoot缓存：	
	https://blog.csdn.net/weixin_36279318/article/details/82820880		
1.JSR107
	Java Caching定义了5个核心接口。
	CachingProvider
		定义了创建、配置、获取、管理和控制多个CacheManager。
		一个应用可以在运行期访问多个CachingProvider。
	CacheManager
		定义了创建、配置、获取、管理和控制多个唯一命名的Cache，这些Cache 存在于CacheManager的上下文中。
		一个CacheManager仅被一个CachingProvider所拥有。
	Cache
		是一个类似Map的数据结构并临时存储以Key为索引的值。
		一个Cache仅被一个 CacheManager所拥有。
	Entry
		是一个存储在Cache中的key-value对。
	Expiry
		每一个存储在Cache中的条目有一个定义的有效期。一旦超过这个时间条目为过期 的状态。一旦过期条目将不可访问、更新和删除。
		缓存有效期可以通过ExpiryPolicy设置。
Spring缓存抽象
	应用程序只要面向Spring缓存API编程，应用底层的缓存实现可以在不同的缓存之间自由切换。

	Spring3.1开始定义了org.springframework.cache.Cache和org.springframework.cache.CacheManager接口来统一不同的缓存技术； 
	并支持使用JCache（JSR-107）注解简化我们开发。
Cache？
	Cache接口为缓存的组件定义规范，包含缓存的各种集合操作。
	Cache接口下Spring提供了各种xxxCache的实现；如RedisCache，EhCacheCache , ConcurrentMapCache。
CacheManager？
	能够管理Cache 并提供缓存的实现方案。(如内存,redis,等)  
	是提供一个默认的缓存策略吗
	未配置时spring有一个默认的simpleCacheManager
spring缓存注解：
	@EnableCaching	
		开启基于注解的缓存
	@Cacheable	
		主要针对方法配置，能够根据方法的请求参数对其结果进行缓存
	@CacheEvict
		清空缓存
	@CachePut	
		保证方法被调用，又希望结果被缓存。