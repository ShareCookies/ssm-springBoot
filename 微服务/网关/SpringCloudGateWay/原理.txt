https://blog.csdn.net/thqtzq/article/details/94590287


?
网关工作原理：
	网关工作原理图：
		spring_cloud_gateway_diagram.png
	介绍：
		Clients make requests to Spring Cloud Gateway.
		If the Gateway Handler Mapping determines that a request matches a route, it is sent to the Gateway Web Handler.
		This handler runs the request through a filter chain that is specific to the request.
		The reason the filters are divided by the dotted line is that filters can run logic both before and after the proxy request is sent.
			过滤器由虚线分隔的原因是,过滤器可以在发送代理请求之前和之后运行逻辑。
		All “pre” filter logic is executed. Then the proxy request is made. After the proxy request is made, the “post” filter logic is run.
			？
				“post” filter 被执行，在代理请求被建立后，
				就是指修改response吗？
				还是指代理请求被建立？
				还是指代理请求被执行完？
路由：
	附：
		URIs defined in routes without a port get default port values of 80 and 443 for the HTTP and HTTPS URIs, respectively.
4. Configuring Route Predicate Factories and Gateway Filter Factories

	There are two ways to configure predicates and filters: shortcuts and fully expanded arguments. Most examples below use the shortcut way.
		快捷方式和全扩展参数
	The name and argument names will be listed as code in the first sentance or two of the each section. The arguments are typically listed in the order that would be needed for the shortcut configuration.
	4.1Shortcut Configuration：
		application.yml

		spring:
		  cloud:
			gateway:
			  routes:
			  - id: after_route
				uri: https://example.org
				predicates:
				- Cookie=mycookie,mycookievalue
	4.2. Fully Expanded Arguments
		Fully expanded arguments appear more like standard yaml configuration with name/value pairs.
		Typically, there will be a name key and an args key.
		The args key is a map of key value pairs to configure the predicate or filter.
			args键是用于配置谓词或过滤器的键值对的映射。
			？
				to 介词，这里前面应该是名词(还是句子了)
		例：
			application.yml
			spring:
			  cloud:
				gateway:
				  routes:
				  - id: after_route
					uri: https://example.org
					predicates:
					- name: Cookie
					  args:
						name: mycookie
						regexp: mycookievalue

			这是上面显示的Cookie谓词的快捷方式配置的完整配置。
			This is the full configuration of the shortcut configuration of the Cookie predicate shown above.
7.1. Combined Global Filter and GatewayFilter Ordering
When a request matches a route, the filtering web handler adds all instances of GlobalFilter and all route-specific instances of GatewayFilter to a filter chain.
This combined filter chain is sorted by the org.springframework.core.Ordered interface, which you can set by implementing the getOrder() method.

As Spring Cloud Gateway distinguishes between “pre” and “post” phases for filter logic execution (see How it Works), the filter with the highest precedence is the first in the “pre”-phase and the last in the “post”-phase.
	由于Spring Cloud Gateway区分了执行过滤器逻辑的“前”阶段和“后”阶段（请参见工作原理），因此具有最高优先级的过滤器在“前”阶段中是第一个，在“后”阶段中是最后一个， 阶段。
The following listing configures a filter chain:
Example 53. ExampleConfiguration.java
	@Bean
	public GlobalFilter customFilter() {
		return new CustomGlobalFilter();
	}

	public class CustomGlobalFilter implements GlobalFilter, Ordered {

		@Override
		public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
			log.info("custom global filter");
			return chain.filter(exchange);
		}

		@Override
		public int getOrder() {
			return -1;
		}
	}
