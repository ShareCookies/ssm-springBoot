官网：http://kafka.apache.org/
Kafka教程：
	安装：https://www.cnblogs.com/qingyunzong/p/9005062.html
	介绍：
		https://www.cnblogs.com/qingyunzong/p/9004509.html
		https://www.orchome.com/kafka/index
	架构：https://www.cnblogs.com/qingyunzong/p/9004593.html
	高可用：https://www.cnblogs.com/qingyunzong/p/9004703.html
	Kafka在zookeeper中的存储：https://www.cnblogs.com/qingyunzong/p/9007107.html
介绍：
	Kafka是一个高性能分布式消息系统。
	附：
		分布式、分区的、多副本的、多订阅者，基于zookeeper协调的分布式MQ系统，是Apache下顶级子项目。
		常用于作为日志系统等
		Apache Kafka相对于ActiveMQ是一个非常轻量级的消息系统，除了性能非常好之外，还是一个工作良好的分布式系统。
			？为什么rabbitMq称为重量级
	具有以下特性：
		快速持久化，可以在O(1)的系统开销下进行消息持久化；？
		高吞吐，在一台普通的服务器上既可以达到10W/s的吞吐速率；？
		完全的分布式系统，Broker、Producer、Consumer都原生自动支持分布式，自动实现负载均衡；
		支持Hadoop数据并行加载，？
			对于像Hadoop的一样的日志数据和离线分析系统，但又要求实时处理的限制，这是一个可行的解决方案。Kafka通过Hadoop的并行加载机制统一了在线和离线的消息处理。

Kafka基本概念：
	broker(经纪人)
		Kafka 集群由一个或多个服务器组成，每个服务器节点称为broker。
		broker 上存储了topic的数据（即partition）。
			partition会被broker自动均衡存储。
		例：
			如果某topic有N个partition，集群有N个broker，那么每个broker存储该topic的一个partition。
			如果某topic有N个partition，集群有(N+M)个broker，那么其中有N个broker存储该topic的一个partition，剩下的M个broker不存储该topic的partition数据。
			如果某topic有N个partition，集群中broker数目少于N个，那么一个broker存储该topic的一个或多个partition。
			在实际生产环境中，尽量避免这种情况的发生，这种情况容易导致Kafka集群数据不均衡。
	Topic(主题)
		每条发布到Kafka集群的消息都有一个类别，这个类别被称为Topic。
		注：
			物理上不同Topic的消息分开存储到各个broker上。
			但逻辑上用户操作一个Topic的消息，只需指定消息的Topic即可生产或消费数据而不必关心数据存于何处。
	Partition：(分隔)
		topic中的数据分割为一个或多个partition。
			附：每个topic至少有一个partition。
		附：
			1. 每个partition中的数据又使用多个segment文件存储。？
			2. 同一个partition中的数据是有序的，但不同partition间的数据丢失了数据的顺序。
			注：
				在需要严格保证消息的消费顺序的场景下，需要将partition数目设为1。
				如果topic有多个partition，消费数据时就不能保证数据的顺序。

	Producer
		生产者即数据的发布者。
		该角色将消息发布到Kafka的topic中。
		附：
			生产者发送的消息，随机存储到一个partition中。？
			当然生产者也可以指定数据存储的partition。？
	Consumer
		消费者可以从broker中读取数据。？
		附：
			消费者可以消费多个topic中的数据。
	Consumer Group
		每个Consumer都属于一个特定的Consumer Group。
		Consumer Group作用？
		附：
			可为每个Consumer指定group name，若不指定group name则属于默认的group。
	Leader
		每个partition有多个副本，其中有且仅有一个作为Leader，Leader是当前负责数据的读写的partition。
		？
			副本作用？
			如何设置副本？
	Follower
		其余的partition副本叫follower？
		Follower跟随Leader，所有写请求都通过Leader路由，数据变更会广播给所有Follower，Follower与Leader保持数据同步。如果Leader失效，则从Follower中选举出一个新的Leader。当Follower与Leader挂掉、卡住或者同步太慢，leader会把这个follower从“in sync replicas”（ISR）列表中删除，重新创建一个Follower。！

面试：
	kafka节点之间如何复制备份的？
	kafka消息是否会丢失？为什么？
	kafka最合理的配置是什么？
	kafka的leader选举机制是什么？
	kafka对硬件的配置有什么要求？
	kafka的消息保证有几种方式？
	kafka为什么会丢消息？
	
	
	避免消息堆积？
		1） 采用workqueue，多个消费者监听同一队列。
		2）接收到消息以后，而是通过线程池，异步消费。
	如何避免消息丢失？
		1） 消费者的ACK机制。可以防止消费者丢失消息。
		但是，如果在消费者消费之前，MQ就宕机了，消息就没了？
		2）可以将消息进行持久化。要将消息持久化，前提是：队列、Exchange都持久化