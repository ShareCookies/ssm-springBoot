负载均衡：
	https://www.cnblogs.com/wang-meng/p/5861174.html
	
	介绍：
		当用户访问我们的服务器的时候, 请求发送给ng后， Nginx服务器将决定转发到哪个Tomcat服务器上去给用户提供服务。 
		如此我们就可以处理高并发的访问了, 达到负载均衡的目的。
	负载均衡实现:(有问题)
		https://www.linuxidc.com/Linux/2015-03/115207.htm
		# 配置了两台转发机器: 39.156.66.18和13.250.177.223, 它们的权重分别是2/3 和1/3, 
		#也就是说访问三次ng, 有两次是18上的Tomcat来处理,有一次是223上的Tomcat来处理.
		
		upstream balanceserver{
			server ip1:端口 weight=20;
			server ip2:端口 weight=10;
		}
		server {
			listen 9999 ssl;
			#ssl证书(公钥.发送到客户端的)
				ssl_certificate ssl/1_58xuejia.cn_bundle.crt;
			#ssl私钥,
				ssl_certificate_key ssl/2_58xuejia.cn.key;
			server_name  58xuejia.cn;
		
			location / {
				proxy_pass http://balanceserver;
			}
		}

	Keepalived:
		https://www.cnblogs.com/wang-meng/p/5861174.html
		Keepalived作用：
			这里如果我们的机器ng1 出现故障了呢? 那么怎么使用ng2上的Nginx进行转发呢? 
			怎么设置主机和备机呢? 如果主机死了怎么进行故障移除呢?　如果主机从不可用到可用状态又怎么进行恢复添加呢? 
			这些功能都是可以通过Keepalived来进行设置的.
			
		Keepalived工作流程：
			首先Keepalived可以在主机上产生一个虚拟的ip,192.168.200.150, keepalived会将这个virtual ip绑定到交换机上.
			当用户访问主机:ng1时, 交换机会通过这个ip和虚拟ip的对应找到192.168.200.129上的Nginx进行处理.
			
			如果当有一天192.168.200.129上的Nginx挂掉的时候, Keepalived会立即在备机上生成一个相同的vip: 192.168.200.150, 当用户继续访问192.168.200.129时, 交换机上已经重新绑定了virtual ip, 这时发现这个vip是存在于192.168.200.130上面的, 所以直接将请求转发到了备机上. 
			
			如果主机被修复好能够继续对外提供服务时, 这时keepalived会将主机上继续生成这个virtual ip, 同时回收在备机上生成的 virtual ip. 
				这个是通过心跳检查来判断主机已恢复使用.
		搭建Keepalived：
			1.安装openssl
				Keepalived需要依赖openssl
				附：
					检测是否安装了openssl
						rpm -qa | grep openssl
			2.安装Keepalived:
				https://www.cnblogs.com/wang-meng/p/5861174.html		
	附：
	负载均衡的实现方式
		1.一种是通过硬件来进行解决
			常见的硬件有NetScaler、F5、Radware和Array等商用的负载均衡器，但是它们是比较昂贵的
		2.一种是通过软件来进行解决的
			常见的软件有LVS、Nginx、apache等,它们是基于Linux系统并且开源的负载均衡策略.
		
