Spring是如何支持REST的:
	P500
	
HCG:
	REST实现关键点：资源的暴露和表述。
	资源的暴露：
		就是定义url，符合动名词形式。
	资源的表述：
		客户端和服务器端针对某一资源是如何通信的。
		可JSON或XML或渲染HTML形式。
		
		注：
			控制器本身通常并不关心资源如何表述。
			控制器以Java对象的方式来处理资源。
			控制器完成了它的工作之后，资源才会被转化成最适合客户端的形式。
spring资源的表述：
	Spring提供了两种方法将资源的Java表述形式转换为发送给客户端的表述形式。
	内容协商（Content negotiation）：p503？
		介绍：
			选择一个视图，它能够将模型渲染为呈现给客户端的表述形式；
		
		控制器代码无需修改，相同的一套控制器方法能够为面向人类的用户产生HTML内容，
		也能针对不是人类的客户端产生JSON或XML。

	*消息转换器（Message conversion）：p510！！！
		介绍：
			通过一个消息转换器将控制器所返回的对象转换为呈现给客户端的表述形式。
		
		
		当使用消息转换功能时，DispatcherServlet不再需要那么麻烦地将模型数据传送到视图中。
		实际上，这里根本就没有模型，也没有视图，只有控制器产生的数据，以及消息转换器转换数据之后所产生的资源表述。

		@ResponseBody：
			springMVC注解.txt
		@RequestBody：p514
			前景：
				到目前为止，我们只关注了REST端点如何为客户端提供资源。
				但是REST API也可以接受来自客户端的资源表述。
				如果要让控制器将客户端发送的JSON和XML转换为它所使用的Java对象，那是非常不方便的。
				而消息转换器能够将表述转换为对象。
			介绍：
				当参数上使用了@RequestBody，Spring将会查看请求中的Content-Type头部信息，并查找能够将请求体转换为对象的消息转换器。
			例：
				如果客户端发送的Spittle数据是JSON表述形式，那
				么Content-Type头部信息可能就会是“application/json”。在
				这种情况下，DispatcherServlet会查找能够将JSON转换为Java
				对象的消息转换器。如果Jackson 2库在类路径中，那
				么MappingJackson2HttpMessageConverter将会担此重任，将
				JSON表述转换为Spittle，然后传递到saveSpittle()方法中。
				这个方法还使用了@ResponseBody注解，因此方法返回的Spittle
				对象将会转换为某种资源表述，发送给客户端。
		@RestController：
			springMVC注解.txt
提供资源之外的信息：
	一个好的REST API不仅能够在客户端和服务器之间传递资源，
	它还能够给客户端提供额外的元数据，帮助客户端理解资源或者在请求中出现了什么情况。
	发送错误信息到客户端：p517
		当处理过程出错了，此时返回null且响应中默认的HTTP状态码是200。
		如果响应体中能够包含错误信息而不是空的话就更好了。
		Spring提供了多种方式来处理这样的场景：
			1.使用@ResponseStatus注解可以指定状态码；
			2.控制器方法可以返回ResponseEntity对象，该对象能够包含更多响应相关的元数据；
			3.异常处理器能够应对错误场景，这样处理器方法就能关注于正常的状况。
		ResponseEntity：
			
		错误处理器：p520
			错误处理器是如何监听到控制器跑出的错误了？
			
			