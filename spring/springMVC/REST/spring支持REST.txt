Spring是如何支持REST的:
	P500
	hcg：
		json数据接收：
			用@RequestBody注解方法参数，来接收json类型数据。
		json数据返回
			用@ResponseBody注解方法，来返回json类型数据。
			
			注：
				@RestController注解相当于@ResponseBody ＋ @Controller的组合。
HCG:
	REST实现关键点：资源的暴露和表述。
	资源的暴露：（即如何定义对外的url）
		就是定义url，符合动名词形式。
	资源的表述：（即使用什么格式来传输数据）
		客户端和服务器端针对某一资源是如何通信的。
		可JSON或XML或渲染HTML形式。
		
		注：
			控制器本身通常并不关心资源如何表述。
			控制器以Java对象的方式来处理资源。
			控制器完成了它的工作之后，资源才会被转化成最适合客户端的形式。
spring资源的表述：
	Spring提供了两种方法将资源的Java表述形式转换为发送给客户端的表述形式。
	内容协商（Content negotiation）：p503？
		介绍：
			选择一个视图，它能够将模型渲染为呈现给客户端的表述形式；
		
		控制器代码无需修改，相同的一套控制器方法能够为面向人类的用户产生HTML内容，
		也能针对不是人类的客户端产生JSON或XML。

	*消息转换器（Message conversion）：p510！！！
		介绍：
			1.通过一个消息转换器将控制器所返回的对象转换为呈现给客户端的表述形式。
		
			2.当使用消息转换功能时，DispatcherServlet不再需要那么麻烦地将模型数据传送到视图中。
			即，这里就没有模型，也没有视图，只有控制器产生的数据，以及消息转换器转换数据之后所产生的资源表述。

		@ResponseBody：
			控制器注解.txt 
		@RequestBody：p514
			控制器注解.txt 
			介绍：
				到目前为止，我们只关注了REST端点如何为客户端提供资源。
				但是REST API也可以接受来自客户端的资源表述。
				如果要让控制器将客户端发送的JSON和XML转换为它所使用的Java对象，那是非常不方便的。
				而消息转换器能够将表述转换为对象。
		@RestController：
			springMVC注解.txt
提供资源之外的信息：
	异常处理.txt > REST风格下异常的处理：
			
			