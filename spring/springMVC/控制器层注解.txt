spirngMVC的构造型注解：
	@Controller：
		@Controller注解声明了当前类为控制器，控制器注册为spring容器的bean，由spring来进行管理。
		实际上这个注解对类本身的影响并不大，（构造型注解）只是辅助实现组件扫描，帮助该类注册为Spring应用上下文中的一个bean。替换为@Component注解，它所实现的效果是一样的，但是在表意性上可能会差一些。		
spirngMVC控制器相关注解：
	请求的处理：
		@RequestMapping：
			介绍：
				RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。 
			用于类上：
				表示类中的所有响应请求的方法都是以该地址作为父路径。
				详细：
					当控制器在类级别上添加@RequestMapping注解时，这个注解会应用到控制器的所有处理器方法上。
					处理器方法上的@RequestMapping注解会对类级别上的@RequestMapping的声明进行补充。
			用于方法：
				例：
					@RequestMapping("/path")表示该控制器处理所有路劲为“/path”的URL请求。
			注解有六个属性： 
				params:指定request中必须包含某些参数值是，才让该方法处理。 
				headers:指定request中必须包含某些指定的header值，才能让该方法处理请求。 
				value:
					1.指定请求的实际地址，指定的地址可以是URI Template 模式 
					2.value属性能够接受一个String类型的数组。
					例：
						@RequestMapping({"/","/home"})
						类或方法能够映射到对“/”和“/home”的GET请求。
				method:
					指定请求的method类型， GET、POST、PUT、DELETE等 。
					表明它只能处理POST请求。
					默认： HTTP GET 类型的。
					
				consumes:
					指定处理请求的提交内容类型（Content-Type），如application/json,text/html; 
					默认：？
					例：
						解析：
							这个方法只会处理Accept头部信息包含“application/json”的请求。
							其他任何类型的请求，即使它的URL匹配指定的路径并且是GET请求也不会被这个方法处理。
							这样的请求会被其他的方法来进行处理（如果存在适当方法的话），或者返回客户端HTTP 406（Not Acceptable）响应
				produces:
					指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回					
		@GetMapping和@PostMapping：
			@GetMapping和@PostMapping等是一个组合注解，是@RequestMapping(method = RequestMethod.GET)等的缩写。
	数据的获取：
		url参数，form-data表单参数的接收：
			1.使用@RequestParam
				./请求参数映射.txt goto: # @RequestParam
			2.使用HttpServletRequest
				@RequestMapping(value = "/getUserInfo")
				public User getUserInfo(HttpServletRequest request){
					Integer id = Integer.parseInt(request.getParameter("id"));
					if (id.intValue() == 0) {
						return null;
					}
				}
				这个方法是获取整个URL的信息，然后手动获取和分离参数，和类型转化。这个里面带的内容很多，不仅Param还有Header，Cookies等。
		body中参数的接收（请求体的contenType一般为application/json）：
			请求体的contenType一般为application/json，请求体参数一般为json格式
			3. @RequestBody：
				./请求参数映射.txt goto: # @RequestBody
		附：
			https://blog.csdn.net/myt0929/article/details/84629973
	数据的返回：
		返回json类型数据：
			@ResponseBody：
				介绍：
					1.该注解用于控制器方法上。
						1.告诉Spring跳过正常的模型/视图流程（即不不适用视图解析器），转而使用消息转换器。
							
						2.该注解将使控制器方法返回的对象，通过适当的HttpMessageConverter(消息转换器)转化为前端指定格式（Accept请求头指定，一般就是json格式）后，写入到Response对象的body数据区。
			@RestController：
				介绍：
					该注解用于控制器类上。
					如果在控制器类上使用@RestController来代替@Controller的话，Spring将会为该控制器的所有处理方法的返回应用消息转换功能。
						即：@RestController注解相当于@ResponseBody ＋ @Controller的组合。相当于该控制器类下的每个方法都添加@ResponseBody。
ServletAPI：！
	springMvc中如何访问到servlet的api了。
	public String loginSuccess(HttpServletRequest request){  
		request.getReader()
	}