mapper映射文件介绍：

定义标签：
	<mapper> :
		XML 的根元素 属性 ηamespace 定义了当 XML 的命名 空间。
		属性：
			namespace：！
	<sql>:
		定义可重复利用的sql
		例子：
			<sql id="allColumns">
				ID,SUBJECT
			</sql>
			
			引用：
				include标签就能把sql标签中定义的东西，引入到指定位置
				INSERT INTO EGOV_DISPATCH(
					<include refid="allColumns"/> 
				)
	<resultMap>
		介绍：
			输出结果映射，将sql查询结果列名和实体类属性之间进行映射。
			resultMap 是 MyBatis 中最重要最强大的元素，它能提供级联查询，缓存等功能？
		例子：
			定义resultMap：
				<resultMap type="包名.Dispatch" id="DispatchResultMap">
					<result property="id" column="ID"/>
					<result property="draftDate" column="DRAFT_DATE" javaType="java.util.Date" jdbcType="DATE"/>
				</resultMap>
			使用resultMap：
				<select id="get*" resultMap="resultMap的id">
				</select>
				
		<result>：
			<result>列用来映射实体类属性和sql返回字段
			注：
				如果sql结果不返回DRAFT_DATE字段，则draftDate属性会为null，并不会报错。
				即：查询结果，可以不返回result对应的sql字段。
	resultType：
		介绍：
			    resultType可以将查询结果直接映射到pojo，但需要pojo的属性名和sql查询的列名一致方可映射成功。
				resultType并不是一个标签，而是sql标签的一个属性。
		映射到实体类：
			注：
				属性名与列名不同，如何使用resultType进行映射：
					为字段取别名。
					多表连接查询时会用到该方案。
					例：
						select dis.DRAFT_DEPT rowCode1,
		映射到Map：
			介绍：
				1.映射到java.lang.Map,key是查询语句的列名，value是查询的值，key大小写敏感。
				2.如果该字段为null或者“”的话，封装返回的Map中会自动去除该字段，因此在Map中取不到该列值。
			例：
				<select id="get*" resultMap="java.lang.Map">
				</select>

		注：
			开启驼峰映射：！
				<setting name="mapUnderscoreToCamelCase" value="true">
				可将数据库字段为user_name的映射到userName属性上。
			属性大小写：
				1.映射到对象中的属性，大小写不敏感。
				2.映射到java.lang.Map,key大小写敏感？	
	resultMap与resultType区别：
		1.sql查询结果字段名和pojo的属性名不一致，建议使用resultMap进行映射。

CURD标签：
	<select>：
		介绍：
			定义了一个 SELECT 查询。
		属性：
			id 属性：
				定义了当前 SELECT 查询的唯一id
			resultType：
				指定当前查询的返回值类型 。
				用法：
					1.返回一个基本类型值，如String。
					2.返回一个对象，但用resultType，就必须返回这个对象所有信息。!
				例:
					resultType="int"
					resultType="包名.Country"
			resultMap:
				指定当前查询的返回值类型 。
				用法：
					返回一个对象
				例子：
					resultMap="<resultMap>的id属性"
				注：
					使用该属性，要先定义<resultMap>标签。
		对应sql语句：
			select id, ..from ..：
mybaits动态SQL标签:
	动态SQL：
		根据不同条件拼接 SQL 语句。
	动态SQL标签：
		if
		choose (when oterwise)
		trim (where set)？
		foreach
		bind 
	<if>:
		用法：
			<if test="对参数的判断">
				...
			</if>
		例：
			<where>
				<if test="dispatch.systemNo!=null and dispatch.systemNo!=''">
					AND SYSTEM_NO = #{dispatch.systemNo}
				</if>
			</where>
	<foreach>:
		介绍:
			遍历集合，动态构造指定sql。
		用法：
			collection要被循环的对象，item要从循环对象中取出的元素。
			separator，open，close为元素的分隔格式。
		例：
			<where>
				id in
				<foreach item="item" collection="list" separator="," open="(" close=")" >
				  #{item.id, jdbcType=NUMERIC}
				</foreach>
			</where>
			对应sql：
				WHERE id in ( ? , ? ) 
			
			
			
			
			
			
			
			
			
			
		<where>
			尽量不用where
		<![CDATA[]]>的作用：
			解析xml文件的时候不转义特殊字符，要使用<![CDATA[ ]]>来解决。
			https://www.cnblogs.com/ferby/p/9799164.html
		模糊查询 ：！
			like CONCAT('%', #{lineName}, '%')
	?
		resultMap resultType
		XML中针对不同的数据库编不同的 SQL 语句:
